#!/usr/bin/env python3

import os
import sys

PROJECT_PATH = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
sys.path.insert(0, PROJECT_PATH)

from libs.storage import Storage


test_dir = '/tmp/test-pico-storage'
os.system('mkdir -p %s' % test_dir)
GLOBAL_DB_PATH = '%s/testdb.ldb' % test_dir

GENESIS_OPEN_BLOCK_HASH = '991CF190094C00F0B68E2E5F75F6BEE95A2E0BD93CEAA4A6734DB9F19B728948'

genesis_open_block_hex = '''
    E89208DD038FBB269987689621D52292AE9C35941A7484756ECCED92A65093BA
    E89208DD038FBB269987689621D52292AE9C35941A7484756ECCED92A65093BA
    E89208DD038FBB269987689621D52292AE9C35941A7484756ECCED92A65093BA
    9F0C933C8ADE004D808EA1985FA746A7E95BA2A38F867640F53EC8F180BDFE9E2C1268DEAD7C2664F356E37ABA362BC58E46DBA03E523A7B5A19E4B6EB12BB02
    91B63FDD1754F062
'''
GENESIS_OPEN_BLOCK_HEX = ''.join(genesis_open_block_hex.split()).upper()

genesis_open_block_hex_with_next = '''
    E89208DD038FBB269987689621D52292AE9C35941A7484756ECCED92A65093BA
    E89208DD038FBB269987689621D52292AE9C35941A7484756ECCED92A65093BA
    E89208DD038FBB269987689621D52292AE9C35941A7484756ECCED92A65093BA
    9F0C933C8ADE004D808EA1985FA746A7E95BA2A38F867640F53EC8F180BDFE9E2C1268DEAD7C2664F356E37ABA362BC58E46DBA03E523A7B5A19E4B6EB12BB02
    91B63FDD1754F062
    A170D51B94E00371ACE76E35AC81DC9405D5D04D4CEBC399AEACE07AE05DD293
'''
GENESIS_OPEN_BLOCK_HEX_WITH_NEXT = ''.join(genesis_open_block_hex_with_next.split()).upper()


def test_storage_put():
    storage = Storage(GLOBAL_DB_PATH, readonly=False)
    storage.put_block('open', GENESIS_OPEN_BLOCK_HASH, bytes.fromhex(GENESIS_OPEN_BLOCK_HEX))


def test_storage_get():
    storage = Storage(GLOBAL_DB_PATH, readonly=True)
    assert storage.get_block('open', GENESIS_OPEN_BLOCK_HASH).hex().upper() == GENESIS_OPEN_BLOCK_HEX


def test_storage_overwrite():
    storage = Storage(GLOBAL_DB_PATH, readonly=False)
    storage.put_block('open', GENESIS_OPEN_BLOCK_HASH, bytes.fromhex(GENESIS_OPEN_BLOCK_HEX_WITH_NEXT))


def test_storage_get_new():
    storage = Storage(GLOBAL_DB_PATH, readonly=True)
    assert storage.get_block('open', GENESIS_OPEN_BLOCK_HASH).hex().upper() == GENESIS_OPEN_BLOCK_HEX_WITH_NEXT

